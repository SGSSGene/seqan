name: CI on Windows

on:
  push:
    branches:
      # Push events to branches matching refs/heads/master
      - 'master'
      # Push events to branches matching refs/heads/develop
      - 'develop'
  pull_request:
  # Enables a manual trigger, may run on any branch
  workflow_dispatch:

concurrency:
  group: windows-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  TZ: Europe/Berlin

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 180
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Visual Studio 16 2019"
            os: windows-2019
            toolset: '14.29'
            msvc_ver: '16'
            build_type: Release
            cxx_flags: "/std:c++latest"

    steps:
      - name: Checkout SeqAn2
        uses: actions/checkout@v2
        with:
          path: seqan

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: ${{ matrix.toolset }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Python dependencies
        run: |
          pip install setuptools wheel
          pip install -r seqan/manual/requirements.txt

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2

      - name: Install conda dependencies
        run: conda install -c conda-forge clcache boost-cpp bzip2 libxml2 zlib

      - name: Get cached build
        uses: actions/cache@v2
        with:
          path: .clcache
          key: ${{ matrix.name }}-clcache-${{ github.ref }}-${{ github.run_number }}
          # Restoring: From current branch, otherwise from base branch, otherwise from any branch.
          restore-keys: |
            ${{ matrix.name }}-clcache-${{ github.ref }}
            ${{ matrix.name }}-clcache-${{ github.base_ref }}
            ${{ matrix.name }}-clcache-

      - name: Configure tests
        env:
          SEQAN_WIN_CONTRIB_DIRECTORY: ${{ github.workspace }}\seqan-contrib
        run: |
          New-Item -Name "seqan-build" -ItemType "directory" -Force
          cd seqan-build
          cmake ../seqan -G"${{ matrix.name }}" `
                         -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
                         -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }}" `
                         -DSEQAN_DISABLE_VERSION_CHECK=ON `
                         -DSEQAN_GH_ACTIONS_BUILD:BOOL=ON `
                         -DPython3_ROOT_DIR=$env:pythonLocation `
                         -DPython3_EXECUTABLE=$env:pythonLocation/bin/python3

      - name: Build tests
        env:
          CLCACHE_BASEDIR: ${{ github.workspace }}
          CLCACHE_DIR: ${{ github.workspace }}/.clcache
          CLCACHE_COMPRESS: true
          CLCACHE_COMPRESSLEVEL: 6
          CLCACHE_HARDLINK: true
        run: |
          cd seqan-build
          clcache.exe -M 209715200 # Set Maximum cache size to 200 MiB
          cmake --build . --config "${{ matrix.build_type }}" --parallel 2 `
                -- /p:TrackFileAccess=false /p:CLToolExe=clcache.exe /p:CLToolPath=$((Get-Item (Get-Command clcache.exe).Path).DirectoryName)

      - name: Run tests
        run: |
          cd seqan-build
          ctest . -j2 -C "${{ matrix.build_type }}" --output-on-failure --timeout 240 -E "build_manual|test_py_lib_dox"
          if (!$?)
          {
            ctest . -j2 -C "${{ matrix.build_type }}" --output-on-failure --timeout 240 --rerun-failed
          }
